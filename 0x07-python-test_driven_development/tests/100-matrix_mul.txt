===============================
 Task 100-matrix_mul
===============================

This is the test of the function
``matrix_mul()``.

===============================

``matrix_mul()`` returns the addition of two integers.

Multiplication
=======

::
	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
	>>> matrix_mul([[2 ,0, 1], [3, 0, 0], [5, 1, 1]], [[1, 0, 1], [1, 2, 1], [1, 1, 0]])
	[[3, 1, 2], [3, 0, 3], [7, 3, 6]]


::
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]


::
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied


::
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "S"]])
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats


::
	>>> matrix_mul([[1, 2], ["S", 4]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats


::
	>>> matrix_mul([[]])
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'


::
	>>> matrix_mul([[]], [[]])
	Traceback (most recent call last):
	TypeError: m_a can't be empty


::
	>>> matrix_mul([], [])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists


::
	>>> matrix_mul([[]], [[3, 2, 5]])
	Traceback (most recent call last):
	TypeError: m_a can't be empty

::
	>>> matrix_mul([[2]], [[5]])
	[[10]]

::
	>>> matrix_mul([[1, 2]], [[]])
	Traceback (most recent call last):
	TypeError: m_b can't be empty

::
	>>> matrix_mul((2, 6), (5, 8))
	Traceback (most recent call last):
	TypeError: m_a must be a list


::
	>>> matrix_mul([2, 5], (5, 8))
	Traceback (most recent call last):
	TypeError: m_b must be a listt
